{"version":3,"file":"angular-favicon.js","sources":["../../../projects/angular-favicon/src/lib/angular-favicon.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, Inject, OnDestroy, Renderer2, RendererFactory2 } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { fromEventPattern, Subscription } from 'rxjs';\nimport { pluck } from 'rxjs/operators';\n\n/**\n * A service to set the favicon.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AngularFaviconService implements OnDestroy {\n  private renderer: Renderer2;\n\n  constructor(@Inject(DOCUMENT) private _doc: any, private rendererFactory: RendererFactory2) {\n    this.renderer = rendererFactory.createRenderer(null, null);\n  }\n\n  private darkScheme = '(prefers-color-scheme:dark)';\n  private subscriptionToColorScheme: Subscription;\n  private prefersColorScheme$ = fromEventPattern(handler => window.matchMedia(this.darkScheme).addListener(handler as EventListener)).pipe(\n    pluck('matches')\n  );\n\n  /**\n   * Get the favicon of the current HTML document.\n   */\n  getFavicon() {\n    return this._doc.querySelector(\"link[rel*='icon']\");\n  }\n\n  /**\n   * Set the title of the current HTML document.\n   * @param iconURL - Default favicon URL\n   * @param altIconURL - Optional, dark theme favicon URL\n   */\n  setFavicon(iconURL: string, altIconURL?: string) {\n    const link = this.getFavicon() || this.renderer.createElement('link');\n    let currentLinkHref = iconURL;\n\n    if (altIconURL) {\n      this.subscribeToChangesInTheme(link, iconURL, altIconURL);\n\n      if (window.matchMedia(this.darkScheme).matches) {\n        currentLinkHref = altIconURL;\n      }\n    }\n\n    this.appendLinkTag(link, currentLinkHref);\n  }\n\n  /**\n   * Subscribe to the theme color changes in browser/OS and apply the appropiate favicon\n   * @param link - DOM element\n   * @param iconURL - Default favicon URL\n   * @param altIconURL - Optional, dark theme favicon URL\n   */\n  private subscribeToChangesInTheme(link: any, iconURL: string, altIconURL: string) {\n    this.subscriptionToColorScheme = this.prefersColorScheme$.subscribe(isDarkTheme => {\n      if (isDarkTheme) {\n        this.appendLinkTag(link, altIconURL);\n      } else {\n        this.appendLinkTag(link, iconURL);\n      }\n    });\n  }\n\n  /**\n   * Append new link to HEAD\n   * @param link - DOM element\n   * @param iconURL - favicon URL\n   */\n  private appendLinkTag(link: any, iconURL: string) {\n    link.type = 'image/x-icon';\n    link.rel = 'shortcut icon';\n    link.href = iconURL;\n    const head = this._doc.getElementsByTagName('head')[0];\n    this.renderer.appendChild(head, link);\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptionToColorScheme) {\n      this.subscriptionToColorScheme.unsubscribe();\n    }\n  }\n}\n"]}